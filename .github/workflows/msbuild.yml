name: Build and Package WinUI 3 App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest # WinUI 3项目必须在Windows环境上编译

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x' # 确保这里与你的项目目标框架一致，例如 .NET 6、7 或 8

    - name: Install WinUI 3 Workloads # 修正后的步骤名称和命令
      run: |
        dotnet workload install microsoft-windows-sdk-desktop microsoft-windows-sdk-webview2 --ignore-failed-installs

    - name: Restore NuGet packages
      run: dotnet restore App2.sln

    - name: Build WinUI 3 project
      run: dotnet build App2.sln --configuration Release /p:Platform=x64

    - name: Publish WinUI 3 project
      run: dotnet publish "App2 (Package)/App2 (Package).csproj" -c Release -r win-x64 --self-contained true

    - name: List publish directory content
      run: dir "App2 (Package)/bin/Release/net8.0-windows10.0.19041.0/win-x64/publish"

    - name: Find MSIX package
      id: find_msix
      run: |
        $msixFile = Get-ChildItem -Path "App2 (Package)/AppPackages" -Filter "*.msix" -Recurse | Select-Object -ExpandProperty FullName
        echo "Found MSIX file: $msixFile"
        echo "MSIX_PATH=$msixFile" >> $env:GITHUB_OUTPUT

    - name: Upload MSIX artifact
      uses: actions/upload-artifact@v4
      with:
        name: WinUI3-App-MSIX
        path: ${{ steps.find_msix.outputs.MSIX_PATH }}

    - name: Upload Published Binaries
      uses: actions/upload-artifact@v4
      with:
        name: WinUI3-Published-Binaries
        path: "App2 (Package)/bin/Release/net8.0-windows10.0.19041.0/win-x64/publish"
