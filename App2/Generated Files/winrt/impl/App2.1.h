// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.250303.1

#pragma once
#ifndef WINRT_App2_1_H
#define WINRT_App2_1_H
#include "winrt/impl/App2.0.h"
WINRT_EXPORT namespace winrt::App2
{
    struct WINRT_IMPL_EMPTY_BASES ICalculator_pg :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICalculator_pg>
    {
        ICalculator_pg(std::nullptr_t = nullptr) noexcept {}
        ICalculator_pg(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IHome :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IHome>
    {
        IHome(std::nullptr_t = nullptr) noexcept {}
        IHome(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMainWindow :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMainWindow>
    {
        IMainWindow(std::nullptr_t = nullptr) noexcept {}
        IMainWindow(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IResuit :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IResuit>
    {
        IResuit(std::nullptr_t = nullptr) noexcept {}
        IResuit(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ISetting :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISetting>
    {
        ISetting(std::nullptr_t = nullptr) noexcept {}
        ISetting(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
